% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/newclust.R
\name{genclust.emmcmc}
\alias{genclust.emmcmc}
\alias{plot.genclust.emmcmc}
\alias{summary.genclust.emmcmc}
\title{EM-MCMC algorithm for genetic clustering}
\usage{
genclust.emmcmc(x, k, n.iter = 100, sample.every = 10, pop.ini = NULL,
  max.em.iter = 20, prop.move = 0.1, detailed)

summary.genclust.emmcmc(object, burnin = 0, ...)

plot.genclust.emmcmc(x, y = "ll", type = c("trace", "hist", "density",
  "groups"), burnin = 0, ...)
}
\arguments{
\item{x}{a \linkS4class{genind} object}

\item{k}{the number of clusters to look for}

\item{n.iter}{the number of iterations of the MCMC}

\item{sample.every}{the frequency of sampling from the MCMC}

\item{pop.ini}{an optional factor defining the initial cluster configuration}

\item{max.em.iter}{the maximum number of iterations for the EM algorithm}

\item{prop.move}{the proportion of individuals moved across groups at each MCMC iteration}

\item{detailed}{a logical stating whether extra details should be incorporated into the output;
these include group membership probability, indication of convergence, and the number of
iterations used before convergence}

\item{object}{a 'emmcmc' object}

\item{burnin}{the number of iterations of the MCMC to discard}

\item{...}{further arguments passed to other methods}

\item{y}{the data to plot}

\item{type}{a character string indicating the type of graph to produce: the trace ('trace'), a histogram ('hist'), a density plot ('density') or a plot of group composition ('groups')}
}
\description{
Do not use.
}
\examples{
\dontrun{
## run analysis
data(sim2pop)
res <- genclust.emmcmc(sim2pop, k=2, n.iter=1e3, sample.every=50)
plot(res)

## get summary
smry <- summary(res, burn=250)
compoplot(t(smry$proba))
table(smry$group, pop(sim2pop))

## other example, generating hybrids
p1 <- hybridize(sim2pop[pop=1], sim2pop[pop=1], n=50, pop="p1")
p2 <- hybridize(sim2pop[pop=2], sim2pop[pop=2], n=50, pop="p2")
hyb <- hybridize(p1, p2, n=50)
x <- repool(p1, p2, hyb)

## make a pca
pca1 <- dudi.pca(tab(x), scale=FALSE, scannf=FALSE)
s.class(pca1$li, pop(x))

## run MCMC
res <- genclust.emmcmc(x, k=2, n.iter=1e3, sample.every=50)
plot(res)

## get summary
smry <- summary(res, burn=250)
compoplot(t(smry$proba), col.pal=spectral,
n.col=2, txt.leg=paste("group", 1:2))

table(smry$group, pop(x))

## same analysis, initialized with k-means
clust.ini <- find.clusters(x, n.clust=2, n.pca=20)$grp
res <- genclust.emmcmc(x, k=2, pop.ini=clust.ini)
plot(res) # it has converged
plot(res, type="group") # show groups
}
}
\author{
Thibaut Jombart \email{thibautjombart@gmail.com}
}

